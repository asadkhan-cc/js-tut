// The let keyword was introduced in ES6 (2015).
// Variables defined with let cannot be Redeclared.
// Variables defined with let must be Declared before use.
// Variables defined with let have Block Scope
let x = 10;
// Here x is 10

{
let x = 2;
// Here x is 2
}

// Here x is 10


var y = 10;
// Here y is 10

{
var ys = 2;
// Here y is 2
}

// Here y is 2

// =====================================const====================================

const PI = 3.141592653589793;
PI = 3.14;      // This will give an error
PI = PI + 10;   // This will also give an error

// will throw error
// const PI;  
// PI = 3.14159265359;

// You can create a constant array:
const cars = ["Saab", "Volvo", "BMW"];

// You can change an element:
cars[0] = "Toyota";

// You can add an element:
cars.push("Audi");
// You can create a const object:
const car = {type:"Fiat", model:"500", color:"white"};

// You can change a property:
car.color = "red";

// You can add a property:
car.owner = "Johnson";

// =============================================OPERATORS and concatinatoin=================================
let text1 = "John";
let text2 = "Doe";
let text3 = text1 + " " + text2;

let textn = "What a very ";
textn += "nice day";

// ==========================JavaScript Assignment Operators====================
// Operator	    Example         Same As
// =	        x = y       	x = y
// +=	        x += y      	x = x + y
// -=	        x -= y      	x = x - y
// *=	        x *= y      	x = x * y
// /=	        x /= y      	x = x / y
// %=	        x %= y      	x = x % y
// **=	        x **= y     	x = x ** y


// ==========================JavaScript Comparison Operators====================
// ==	equal to
// ===	equal value and equal type
// !=	not equal
// !==	not equal value or not equal type
// >	greater than
// <	less than
// >=	greater than or equal to
// <=	less than or equal to
// ?	ternary operator

// ==========================JavaScript Logical Operators====================

// &&	logical and
// ||	logical or
// !	logical not

